bostonh <- read.table("~/Documents/Uni/SHK/MVA-ToDo/QID-1611-MVApcphousing/bostonh.dat", quote="\"", comment.char="")
View(bostonh)
x=bostonh
z = x[, 14]
z[x[, 14] <= median(x[, 14])] = 1
z[x[, 14] > median(x[, 14])] = 2
parcoord(x[, seq(1, 14, 1)], lty = z, lwd = 0.7, col = z, main = "Parallel Coordinates Plot for Boston Housing",
frame = TRUE)
axis(side = 2, at = seq(0, 1, 0.2), labels = seq(0, 1, 0.2))
# install and load packages
libraries = c("MASS")
lapply(libraries, function(x) if (!(x %in% installed.packages())) {
install.packages(x)
})
lapply(libraries, library, quietly = TRUE, character.only = TRUE)
z = x[, 14]
z[x[, 14] <= median(x[, 14])] = 1
z[x[, 14] > median(x[, 14])] = 2
parcoord(x[, seq(1, 14, 1)], lty = z, lwd = 0.7, col = z, main = "Parallel Coordinates Plot for Boston Housing",
frame = TRUE)
axis(side = 2, at = seq(0, 1, 0.2), labels = seq(0, 1, 0.2))
K    = as.numeric(data[, 14] > median(data[, 14])) + 1
x    = cbind(data[, -(6:13)], K)
z    = data.frame(x)
z1   = subset(z, z$K == 1)
z2   = subset(z, z$K == 2)
m1   = apply(z1, 2, mean)
m2   = apply(z2, 2, mean)
i    = 0
op   = par(mfrow = c(6, 6), cex = 0.15)
while (i < 6) {
i = i + 1
j = 0
while (j < 6) {
j = j + 1
if (i == j) {
boxplot(x[, i] ~ K, at = 1:2, axes = FALSE, lwd = 0.7)
lines(c(0.6, 1.4), c(m1[i], m1[i]), lty = "dotted", lwd = 1.2, col = "red3")
lines(c(1.6, 2.4), c(m1[i], m1[i]), lty = "dotted", lwd = 1.2, col = "red3")
}
if (i > j) {
yy = cbind(x[, j], x[, i], K)
plot(yy[, -3], col = as.numeric(K), xlab = "", ylab = "", cex = 4, axes = FALSE)
}
if (i < j) {
plot(i, type = "n", axes = FALSE, xlab = "", ylab = "", main = "")
}
}
}
title(main = list("Scatterplot matrix for Boston Housing", cex = 8), line = -16,
outer = TRUE)
data = bostonh
K    = as.numeric(data[, 14] > median(data[, 14])) + 1
x    = cbind(data[, -(6:13)], K)
z    = data.frame(x)
z1   = subset(z, z$K == 1)
z2   = subset(z, z$K == 2)
m1   = apply(z1, 2, mean)
m2   = apply(z2, 2, mean)
i    = 0
op   = par(mfrow = c(6, 6), cex = 0.15)
while (i < 6) {
i = i + 1
j = 0
while (j < 6) {
j = j + 1
if (i == j) {
boxplot(x[, i] ~ K, at = 1:2, axes = FALSE, lwd = 0.7)
lines(c(0.6, 1.4), c(m1[i], m1[i]), lty = "dotted", lwd = 1.2, col = "red3")
lines(c(1.6, 2.4), c(m1[i], m1[i]), lty = "dotted", lwd = 1.2, col = "red3")
}
if (i > j) {
yy = cbind(x[, j], x[, i], K)
plot(yy[, -3], col = as.numeric(K), xlab = "", ylab = "", cex = 4, axes = FALSE)
}
if (i < j) {
plot(i, type = "n", axes = FALSE, xlab = "", ylab = "", main = "")
}
}
}
title(main = list("Scatterplot matrix for Boston Housing", cex = 8), line = -16,
outer = TRUE)
x = bostonh
graphics.off()
zz = x
i  = 1
while (i <= 14) {
zz[, i] = (x[, i] - mean(x[, i]))/(sqrt(var(x[, i])))
i = i + 1
}
xt = cbind(log(x[, 1]), x[, 2], x[, 3], x[, 4], log(x[, 5]), log(x[, 6]), (x[,
7]^(2.5)), log(x[, 8]), log(x[, 9]), log(x[, 10]), exp(0.4 * x[, 11]), x[,
12], sqrt(x[, 13]), log(x[, 14]))
tt = x
i  = 1
while (i <= 14) {
tt[, i] = (xt[, i] - mean(xt[, i]))/(sqrt(var(xt[, i])))
i = i + 1
}
# plot
par(mfrow = c(2, 1), ask = FALSE, cex = 0.5)
boxplot(zz, at = 1:14, axes = FALSE, main = "Boston Housing data", cex.main = 1.5)
for (i in 1:14) {
lines(c(i - 0.4, i + 0.4), c(mean(zz[, i]), mean(zz[, i])), col = "red3", lty = "dotted",
lwd = 1.2)
}
boxplot(tt, at = 1:14, axes = FALSE, main = "Transformed Boston Housing data",
cex.main = 1.5)
for (i in 1:14) {
lines(c(i - 0.4, i + 0.4), c(mean(tt[, i]), mean(tt[, i])), col = "red3", lty = "dotted",
lwd = 1.2)
}
carc <- read.delim("~/Documents/Uni/SHK/MVA-ToDo/QID-1621-MVAscacar/carc.txt", header=FALSE)
View(carc)
x=carc
x=carc
pullover <- read.table("~/Documents/Uni/SHK/MVA-ToDo/QID-1618-MVAregzoom/pullover.dat", quote="\"", comment.char="")
View(pullover)
x = pullover
dat = cbind(x[, 2], x[, 1])
cv  = cov(dat)
cv
n      = 150
n      = 150
sig    = rbind(c(1, 0.8), c(0.8, 1))
sig
value  = flipud(eigen(sig)$values)
# install and load packages
libraries = c("matlab")
lapply(libraries, function(x) if (!(x %in% installed.packages())) {
install.packages(x)
})
lapply(libraries, library, quietly = TRUE, character.only = TRUE)
set.seed(80)
